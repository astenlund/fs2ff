<Window x:Class="fs2ff.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:b="clr-namespace:fs2ff.Behaviors"
        xmlns:c="clr-namespace:fs2ff.Converters"
        ui:WindowHelper.UseModernWindowStyle="True"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Icon="img\icon.ico"
        Width="600" Height="500"
        MinWidth="600" MinHeight="500"
        Closing="Window_Closing"
        Loaded="Window_Loaded"
        DataContext="{Binding Main, Source={StaticResource Locator}}">
    <Window.Resources>
        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="12" />
        </Style>
        <Style TargetType="Hyperlink" BasedOn="{StaticResource {x:Type Hyperlink}}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="12" />
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="DarkGray" />
        </Style>
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="12" />
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="12" />
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Tab" Command="{Binding ToggleSettingsPaneCommand}" />
    </Window.InputBindings>
    <ui:SplitView
        FocusManager.FocusedElement="{Binding ElementName=ConnectButton}"
        IsPaneOpen="{Binding SettingsPaneVisible}"
        DisplayMode="Inline"
        OpenPaneLength="185"
        PanePlacement="Right">
        <i:Interaction.Triggers>
            <i:KeyTrigger Key="Escape">
                <i:Interaction.Behaviors>
                    <i:ConditionBehavior>
                        <i:ConditionalExpression>
                            <i:ComparisonCondition
                                LeftOperand="{
                                    Binding IsPaneOpen,
                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ui:SplitView}}"
                                RightOperand="True" />
                        </i:ConditionalExpression>
                    </i:ConditionBehavior>
                </i:Interaction.Behaviors>
                <i:InvokeCommandAction Command="{Binding DismissSettingsPaneCommand}" />
            </i:KeyTrigger>
        </i:Interaction.Triggers>
        <ui:SplitView.Pane>
            <StackPanel
                Orientation="Vertical"
                Margin="15,0,15,0">
                <CheckBox Margin="0,20,0,5" 
                    IsChecked="{Binding AutoConnectEnabled, Mode=TwoWay}"
                    Content="Auto connect"
                    ToolTip="Automatically connects to Flight Simulator when it launches" />
                <Label
                    Content="DEVICE IP"
                    Margin="0,20,0,5" />
                <CheckBox
                    IsChecked="{Binding AutoDetectIpEnabled, Mode=TwoWay}"
                    Content="Auto-detect*"
                    ToolTip="Requires ForeFlight running in the foreground" />
                <TextBox
                    Text="{
                        Binding IpAddress, Mode=TwoWay,
                        Converter={c:IpAddressToStringConverter},
                        UpdateSourceTrigger=PropertyChanged, Delay=5000}"
                    Template="{StaticResource WatermarkTextBoxTemplate}"
                    Tag="255.255.255.255"
                    Margin="0,10,0,0">
                    <i:Interaction.Behaviors>
                        <b:MoveFocusOnEnterBehavior />
                        <b:UpdateSourceOnLostFocusBehavior />
                    </i:Interaction.Behaviors>
                </TextBox>
                <Label
                    Content="DATA SELECTION"
                    Margin="0,20,0,5" />
                <CheckBox
                    IsChecked="{Binding DataPositionEnabled, Mode=TwoWay}"
                    Content="Position" />
                <CheckBox
                    IsChecked="{Binding DataTrafficEnabled, Mode=TwoWay}"
                    Content="Traffic" />
                <CheckBox
                    IsChecked="{Binding DataAttitudeEnabled, Mode=TwoWay}"
                    Content="Attitude" />
                <CheckBox
                    IsChecked="{Binding DataGdl90Enabled, Mode=TwoWay}"
                    Content="Use GDL90 Protocol"
                    ToolTip="Send Data via GDL90 protocol (special setup is required for Garmin Pilot)"/>
                <RadioButton x:Name="Stratus"
                    Content="+ Stratus" Height="32" GroupName="TypeRadio" FontSize="12" Margin="10,0,0,0"
                    IsChecked="{Binding DataStratusEnabled, Mode=TwoWay}" IsEnabled="{Binding DataGdl90Enabled}" 
                    ToolTip="Emulate Stratus 3 Device. Garmin Pilot requires the host to have an adapter bound to 10.29.39.1 and the client must be on the 10.29.39.x subnet."/>
                <RadioButton x:Name="Stratux"
                    Content="+ Stratux" Height="32" GroupName="TypeRadio" FontSize="12" Margin="10,0,0,0"
                    IsChecked="{Binding DataStratuxEnabled, Mode=TwoWay}" IsEnabled="{Binding DataGdl90Enabled}" 
                    ToolTip="Emulate Stratux Device. Warning Currently doesn't work with Garmin Pilot"/>
                <Label
                    Content="{Binding Value, ElementName=Slider, Converter={c:FormatStringConverter}, ConverterParameter='ATTITUDE FREQ: {0} Hz'}"
                    Margin="0,14,0,5" />
                <Slider
                    Name="Slider"
                    IsEnabled="{Binding DataAttitudeEnabled}"
                    Value="{Binding AttitudeFrequency, Mode=TwoWay, Delay=2000, Converter={c:UIntToDoubleConverter}}"
                    Minimum="{Binding AttitudeFrequencyMin, Converter={c:UIntToDoubleConverter}}"
                    Maximum="{Binding AttitudeFrequencyMax, Converter={c:UIntToDoubleConverter}}"
                    Focusable="False"
                    TickPlacement="Both"
                    IsSnapToTickEnabled="True" />
            </StackPanel>
        </ui:SplitView.Pane>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label
                Grid.Row="0"
                Grid.Column="0"
                Visibility="{Binding IpHintVisible, Converter={c:BooleanToVisibilityConverter}}"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                FontStyle="Italic"
                Margin="0,30,0,0">
                <StackPanel Orientation="Vertical">
                    <TextBlock HorizontalAlignment="Center">
                        Device IP not set. Please set it manually or enable
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Center">
                        auto-detect for improved performance.
                        <Hyperlink Command="{Binding OpenSettingsCommand}">Open settings.</Hyperlink>
                    </TextBlock>
                </StackPanel>
            </Label>
            <Button
                Grid.Row="0"
                Grid.Column="0"
                Grid.RowSpan="2"
                Name="ConnectButton"
                Content="{Binding ConnectButtonText, FallbackValue='Connect'}"
                Command="{Binding ToggleConnectCommand}"
                FontSize="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="144"
                Height="60"
                IsEnabled="{Binding ConnectButtonEnabled}" />
            <Ellipse
                Grid.Row="1"
                Grid.Column="0"
                Fill="LawnGreen"
                Stroke="ForestGreen"
                StrokeThickness="1"
                Width="10" Height="10"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Visibility="{Binding IndicatorVisible, Converter={c:BooleanToVisibilityConverter}}"
                Margin="27,0,0,0" />
            <Label
                Grid.Row="1"
                Grid.Column="0"
                Content="NOT"
                Foreground="DarkGray"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Visibility="{Binding NotLabelVisible, Converter={c:BooleanToVisibilityConverter}}"
                Margin="17,0,0,0" />
            <Label
                Grid.Row="1"
                Grid.Column="0"
                Content="CONNECTED"
                Foreground="DarkGray"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Visibility="{Binding ConnectedLabelVisible, Converter={c:BooleanToVisibilityConverter}}"
                Margin="45,0,0,0" />
            <Label
                Grid.Row="1"
                Grid.Column="0"
                Content="AUTO CONNECTING..."
                Foreground="DarkGray"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Visibility="{Binding AutoConnectLabelVisible, Converter={c:BooleanToVisibilityConverter}}"
                Margin="10,0,0,0" />
            <Label
                Grid.Row="1"
                Grid.Column="0"
                Content="UNABLE TO CONNECT TO FLIGHT SIMULATOR"
                Foreground="OrangeRed"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Visibility="{Binding ErrorLabelVisible, Converter={c:BooleanToVisibilityConverter}}"
                Margin="17,0,0,0" />
            <Label
                Grid.Row="1"
                Grid.Column="0"
                Visibility="{Binding UpdateMsgVisible, Converter={c:BooleanToVisibilityConverter}}"
                VerticalAlignment="Center"
                HorizontalAlignment="Right"
                FontStyle="Italic"
                Margin="15,0,25,0">
                <Hyperlink Command="{Binding GotoNewReleaseCommand}">Update available</Hyperlink>
            </Label>
            <ToggleButton
                Grid.Row="0"
                Grid.Column="1"
                Grid.RowSpan="2"
                IsChecked="{Binding SettingsPaneVisible, Mode=TwoWay}"
                VerticalAlignment="Stretch"
                Width="47" HorizontalAlignment="Right">
                <ToggleButton.ContentTemplate>
                    <DataTemplate>
                        <Label Content="S   E   T   T   I   N   G   S" Foreground="White">
                            <Label.LayoutTransform>
                                <TransformGroup>
                                    <RotateTransform x:Name="RotateTransform" Angle="90" />
                                </TransformGroup>
                            </Label.LayoutTransform>
                            <i:Interaction.Triggers>
                                <i:PropertyChangedTrigger Binding="{
                                    Binding IsPaneOpen,
                                    RelativeSource={
                                        RelativeSource FindAncestor,
                                        AncestorType=ui:SplitView}}">
                                    <i:ChangePropertyAction
                                        TargetName="RotateTransform"
                                        PropertyName="Angle">
                                        <i:ChangePropertyAction.Value>
                                            <Binding
                                                Path="IsPaneOpen"
                                                RelativeSource="{
                                                    RelativeSource FindAncestor,
                                                    AncestorType=ui:SplitView}"
                                                Converter="{c:BooleanToDoubleConverter}"
                                                ConverterParameter="270,90" />
                                        </i:ChangePropertyAction.Value>
                                    </i:ChangePropertyAction>
                                </i:PropertyChangedTrigger>
                            </i:Interaction.Triggers>
                        </Label>
                    </DataTemplate>
                </ToggleButton.ContentTemplate>
            </ToggleButton>
        </Grid>
    </ui:SplitView>
</Window>
