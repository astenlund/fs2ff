using System;
using System.Threading;

namespace fs2ff.Models
{
    public class Gdl90Relay : Gdl90Base
    {
        // TODO: Add data counters for incoming UAT MSGs
        //private static long uatMetarCount = 0;

        public static byte[] test = new byte[] { 0x13, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x84, 0xA5, 0x70, 0x30, 0x89, 0x50, 0x11, 0x1A, 0x53, 0x12, 0x09, 0x30, 0x11, 0x0A, 0x23, 0x45, 0x1B, 0x0A, 0x09, 0x18, 0x09, 0x0A, 0x1B, 0x0C, 0x1D, 0x06, 0x07, 0x06, 0x1D, 0x04, 0x1B, 0x0A, 0x01, 0x08, 0x20, 0x80, 0x00, 0xFC, 0x00, 0x00, 0x84, 0xA3, 0xAE, 0x00, 0x09, 0x0A, 0x13, 0x14, 0x15, 0x06, 0x17, 0x06, 0x1D, 0x04, 0x13, 0x0A, 0x01, 0x08, 0x01, 0x12, 0x13, 0x1C, 0x0D, 0x06, 0x27, 0x06, 0x15, 0x14, 0x0B, 0x0A, 0x01, 0x00, 0x01, 0x12, 0x13, 0x1C, 0x0D, 0x06, 0x27, 0x06, 0x15, 0x14, 0x0B, 0x0A, 0x01, 0x00, 0x00, 0x09, 0x0A, 0x13, 0x14, 0x15, 0x06, 0x17, 0x06, 0x1D, 0x04, 0x13, 0x0A, 0x01, 0x08, 0x14, 0x80, 0x00, 0xFC, 0x00, 0x00, 0x84, 0xA1, 0xEC, 0x00, 0x09, 0x0A, 0x1B, 0x0C, 0x1D, 0x06, 0x07, 0x06, 0x1D, 0x04, 0x1B, 0x0A, 0x01, 0x08, 0x08, 0x11, 0x0A, 0x23, 0x45, 0x1B, 0x0A, 0x09, 0x10, 0x18, 0x11, 0x1A, 0x53, 0x12, 0x09, 0x20, 0x30, 0x89, 0x30, 0x13, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x84, 0xAA, 0xB7, 0x30, 0x89, 0x50, 0x11, 0x1A, 0x53, 0x12, 0x09, 0x30, 0x11, 0x0A, 0x23, 0x45, 0x1B, 0x0A, 0x09, 0x18, 0x09, 0x0A, 0x1B, 0x0C, 0x1D, 0x06, 0x07, 0x06, 0x1D, 0x04, 0x1B, 0x0A, 0x01, 0x08, 0x20, 0x80, 0x00, 0xFC, 0x00, 0x00, 0x84, 0xA8, 0xF5, 0x00, 0x09, 0x0A, 0x13, 0x14, 0x15, 0x06, 0x17, 0x06, 0x1D, 0x04, 0x13, 0x0A, 0x01, 0x08, 0x01, 0x12, 0x13, 0x1C, 0x0D, 0x06, 0x27, 0x06, 0x15, 0x14, 0x0B, 0x0A, 0x01, 0x00, 0x01, 0x12, 0x13, 0x1C, 0x0D, 0x06, 0x27, 0x06, 0x15, 0x14, 0x0B, 0x0A, 0x01, 0x00, 0x00, 0x09, 0x0A, 0x13, 0x14, 0x15, 0x06, 0x17, 0x06, 0x1D, 0x04, 0x13, 0x0A, 0x01, 0x08, 0x14, 0x80, 0x00, 0xFC, 0x00, 0x00, 0x84, 0xA7, 0x33, 0x00, 0x09, 0x0A, 0x1B, 0x0C, 0x1D, 0x06, 0x07, 0x06, 0x1D, 0x04, 0x1B, 0x0A, 0x01, 0x08, 0x08, 0x11, 0x0A, 0x23, 0x45, 0x1B, 0x0A, 0x09, 0x10, 0x18, 0x11, 0x1A, 0x53, 0x12, 0x09, 0x20, 0x30, 0x89, 0x30, 0x13, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x84, 0xAF, 0xFD, 0x30, 0x89, 0x50, 0x11, 0x1A, 0x53, 0x12, 0x09, 0x30, 0x11, 0x0A, 0x23, 0x45, 0x1B, 0x0A, 0x09, 0x18, 0x09, 0x0A, 0x1B, 0x0C, 0x1D, 0x06, 0x07, 0x06, 0x1D, 0x04, 0x1B, 0x0A, 0x01, 0x08 };
        public static byte[] test1 = { 0x80, 0x06, 0x74, 0x41, 0x90, 0x50, 0x11, 0xa0, 0x2d, 0x33, 0x05, 0x83, 0x2d, 0xb0, 0xe7, 0x0c, 0x1a, 0x04, 0xd8, 0x32, 0xd7, 0x1c, 0xf1, 0xd6, 0x0c, 0x38, 0xc3, 0x0d, 0x8b, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x06, 0x15, 0x7c, 0x36, 0xc2, 0x00, 0x8b, 0x3b, 0x1c, 0xb0, 0x79, 0xc1, 0x46, 0x37, 0x0d, 0x30, 0xc2, 0x05, 0x92, 0x0b, 0x0c, 0xcb, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x13, 0x0d, 0x4c, 0xb5, 0xc3, 0xd7, 0x9d, 0x21, 0x80, 0x06, 0x74, 0x41, 0x90, 0x50, 0x11, 0xa0, 0x2d, 0x01, 0x18, 0x83, 0x2d, 0xb0, 0xe7, 0x0c, 0x1a, 0x04, 0xd8, 0x32, 0xd7, 0x1c, 0xf1, 0xd6, 0x0c, 0x38, 0xc3, 0x0d, 0x8b, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x06, 0x15, 0x7c, 0x36, 0xc2, 0x00, 0x8b, 0x3b, 0x1c, 0xb0, 0x79, 0xc1, 0x46, 0x37, 0x0d, 0x30, 0xc2, 0x05, 0x92, 0x0b, 0x0c, 0xcb, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x13, 0x0d, 0x4c, 0xb5, 0xc3, 0xd7, 0x9d, 0x21, 0x80, 0x06, 0x74, 0x41, 0x90, 0x50, 0x11, 0xa0, 0x2c, 0x55, 0x47, 0x83, 0x2d, 0xb0, 0xe7, 0x0c, 0x1a, 0x04, 0xd8, 0x32, 0xd7, 0x1c, 0xf1, 0xd6, 0x0c, 0x38, 0xc3, 0x0d, 0x8b, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x06, 0x15, 0x7c, 0x36, 0xc2, 0x00, 0x8b, 0x3b, 0x1c, 0xb0, 0x79, 0xc1, 0x46, 0x37, 0x0d, 0x30, 0xc2, 0x05, 0x92, 0x0b, 0x0c, 0xcb, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x13, 0x0d, 0x4c, 0xb5, 0xc3, 0xd7, 0x9d, 0x21, 0x80, 0x06, 0x74, 0x41, 0x90, 0x50, 0x11, 0xa0, 0x2c, 0x14, 0xd4, 0x83, 0x2d, 0xb0, 0xe7, 0x0c, 0x1a, 0x04, 0xd8, 0x32, 0xd7, 0x1c, 0xf1, 0xd6, 0x0c, 0x38, 0xc3, 0x0d, 0x8b, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x06, 0x15, 0x7c, 0x36, 0xc2, 0x00, 0x8b, 0x3b, 0x1c, 0xb0, 0x79, 0xc1, 0x46, 0x37, 0x0d, 0x30, 0xc2, 0x05, 0x92, 0x0b, 0x0c, 0xcb, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x13, 0x0d, 0x4c, 0xb5, 0xc3, 0xd7, 0x9d, 0x21, 0x80, 0x06, 0x74, 0x41, 0x90, 0x50, 0x11, 0xa0, 0x2c, 0x82, 0x4f, 0x83, 0x2d, 0xb0, 0xe7, 0x0c, 0x1a, 0x04, 0xd8, 0x32, 0xd7, 0x1c, 0xf1, 0xd6, 0x0c, 0x38, 0xc3, 0x0d, 0x8b, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x06, 0x15, 0x7c, 0x36, 0xc2, 0x00, 0x8b, 0x3b, 0x1c, 0xb0, 0x79, 0xc1, 0x46, 0x37, 0x0d, 0x30, 0xc2, 0x05, 0x92, 0x0b, 0x0c, 0xcb, 0x52, 0x04, 0x36, 0x4c, 0xd8, 0x13, 0x0d, 0x4c, 0xb5, 0xc3, 0xd7, 0x9d};
    /// <summary>
    /// UAT message relay protocol (WIP)
    /// </summary>
    /// <param name="id"></param>
    /// <param name="msg"></param>
    public Gdl90Relay(RelayMsgType id, byte[] msg) : base (msg.Length + 4)
        {
            Msg[0] = (byte)id;
            
            // TODO MSG 1-3 is some sort of time value
            
            Array.Copy(msg, 0, Msg, 4, msg.Length);
        }

        // TODO: constructor to take Text UAT messages and convert them

        // TODO: Add data counters for incoming UAT MSGs
        //public static long UatMetarCount
        //{
        //    get => Interlocked.Read(ref uatMetarCount);
        //    set => Interlocked.Add(ref uatMetarCount, value);
        //}

    }

    public enum RelayMsgType : byte
    {
        UPLINK = 0x07,
        BASIC_REPORT = 0x1E,
        LONG_REPORT = 0x1F
    }
}
